#hyperparameter tuning 
defaults:
  - override hydra/sweeper: nevergrad

hydra:
  sweeper:
    optim:
      # name of the nevergrad optimizer to use
      # OnePlusOne is good at low budget, but may converge early
      optimizer: OnePlusOne
      # total number of function evaluations to perform
      budget: 75
      # number of parallel workers for performing function evaluations
      num_workers: 1
      # maximize: true  # comment out for maximization
    # default parametrization of the search space
    parametrization:
      # datasets.freihand.bs:
      #   lower: 5
      #   upper: 30
      #   integer: true
      datasets.freihand.model.encoder.nhead:
        - 1
        - 2
        - 4
        - 6
        - 8
      # train.hand_dim.d_model:
      #   lower: 20
      #   upper: 400
      #   integer: True
      datasets.freihand.model.encoder.joint_embed_dim:
        lower: 50
        upper: 400
        integer: True

# ****** end of hyper parameter tuning****

dataset: freihand
# mode: training or evaluation
mode: [training]
#if true, try to use the GPU if available. false: do not use GPU even if its availabel
use_gpu: true

train:
  dataset: freihand
  num_thread: 0
  lr: 0.001
  lr_drop: 
  lr_dec_factor: 0.5
  lr_decay_step: 100
  n_epochs: 10
  eval_freq: 1
  #parameters for how to incorporate hand dimentions
  hand_dim:
    #are we using the personal hand dimentions
    use_hand_dim: true
    # are we doing ealy fusion or late fusion
    late_fusion: true
    #use an embedding layer before the encoder. Specify d_model when true
    embedding_before_encoder: true
    d_model: 144

datasets:
  freihand:
    base_path: 'C:\\Users\\lahir\\Downloads\\'
    version: gs
    get_mask: False
    get_image: True
    hrnet_annot: True
    #do we train on GT keypoints? false: train on hrnet keypoints
    gt_kpt_train: false
    bs : 8
    num_joints: 21

    model: 
      pos_mask_size: 224
      encoder:
        nhead : 1
        dim_feedforward: 175
        dropout: 0.2
        num_layers: 3
        #this is for a single dimention. *2 for the full positional embedding
        #pos_embedding_dim has to be an even number
        pos_embed_dim: 16
        joint_embed_dim: 300
        #d_model = pose_embed*2 + joint_embed
      
    joint_idx:
      root : 0
      little: 
        mcp: 1
        pip: 2
        dip: 3
        tip: 4
      ring:
        mcp: 5
        pip: 6
        dip: 7
        tip: 8
      middle:
        mcp: 9
        pip: 10
        dip: 11
        tip: 12
      index:
        mcp: 13
        pip: 14
        dip: 15
        tip: 16
      thumb:
        mcp: 17
        pip: 18
        dip: 19
        tip: 20


